function MapPoint(a,b,c,d){this.idx=a,this.connection=[],this.fired=!1,this.color="#ffffff",THREE.Vector3.call(this,b,c,d)}function Traffic(a,b,c,d,e,f){this.size=d,this.color=e,this.label=f,THREE.Vector3.call(this,a,b,c)}function Firework(a,b,c,d,e,f){this.parentObj=a,this.dest=[],this.geometry=null,this.points=null,this.uniforms={sizeMultiplier:{type:"f",value:5},opacity:{type:"f",value:1},texture:{type:"t",value:TEXTURES.spark5}},this.attributes={color:{type:"c",value:[]},size:{type:"f",value:[]}},this.material=new THREE.ShaderMaterial({uniforms:this.uniforms,attributes:this.attributes,vertexShader:SHADER_CONTAINER.fireworkVert,fragmentShader:SHADER_CONTAINER.fireworkFrag,blending:currentBlendingMode,transparent:!0,depthTest:!1}),this.uniformsChild={sizeMultiplier:{type:"f",value:3},opacity:{type:"f",value:.8},texture:{type:"t",value:TEXTURES.spark5}},this.attributesChild={color:{type:"c",value:[]},size:{type:"f",value:[]}},this.materialChild=new THREE.ShaderMaterial({uniforms:this.uniformsChild,attributes:this.attributesChild,vertexShader:SHADER_CONTAINER.fireworkVert,fragmentShader:SHADER_CONTAINER.fireworkFrag,blending:currentBlendingMode,transparent:!0,depthTest:!1}),this.duration=e,this.timer=0,this.position=b,this.fireHeight=20,this.fireRadius=5,this.size=c,this.color=new THREE.Color(d),this.launch()}function CommentLabel(a,b){this.div=document.createElement("div"),this.div.style.position="absolute",this.div.innerHTML=a,this.div.style.top=-1e3,this.div.style.left=-1e3,this.div.style.color="#ffffff",this.div.style.fontSize="16px",this.div.classList.add("comment-label"),this.parent=b,this.position=new THREE.Vector3(0,0,0),container.appendChild(this.div)}function MapLine(a,b){this.bezierSubdivision=8,this.pointA=a,this.pointB=b,this.cpLength=a.distanceTo(b)/THREE.Math.randFloat(1.5,4),this.controlPointA=this.getControlPoint(a,b),this.controlPointB=this.getControlPoint(b,a),THREE.CubicBezierCurve3.call(this,this.pointA,this.controlPointA,this.controlPointB,this.pointB),this.vertices=this.getSubdividedVertices()}function MapNetwork(){this.initialized=!1,this.settings={verticesSkipStep:2,maxLineDist:3,maxConnectinosPerPoint:6},this.meshComponents=new THREE.Object3D,this.components={mapPoints:[],mapLines:[],traffics:[]},this.mapLineOpacityMultiplier=.1,this.mapLineColor="#14d5ff",this.mapLineGeom=new THREE.BufferGeometry,this.mapLinePositions=[],this.mapLineIndices=[],this.mapLineNextPositionsIndex=0,this.mapLineUniforms={color:{type:"c",value:new THREE.Color(this.mapLineColor)},opacityMultiplier:{type:"f",value:this.mapLineOpacityMultiplier}},this.mapLineAttributes={opacity:{type:"f",value:[]}},this.mapPointSizeMultiplier=.1,this.spriteTextureMapPoint=TEXTURES.circle,this.mapPointColor="#ffffff",this.mapPointOpacity=.2,this.mapPointGeom=new THREE.Geometry,this.mapPointUniforms={sizeMultiplier:{type:"f",value:this.mapPointSizeMultiplier},opacity:{type:"f",value:this.mapPointOpacity},texture:{type:"t",value:this.spriteTextureMapPoint}},this.mapPointAttributes={color:{type:"c",value:[]},size:{type:"f",value:[]}},this.mapPointShaderMaterial=new THREE.ShaderMaterial({uniforms:this.mapPointUniforms,attributes:this.mapPointAttributes,vertexShader:null,fragmentShader:null,blending:currentBlendingMode,transparent:!0,depthTest:!1}),this.trafficGeom=new THREE.Geometry,this.trafficUniforms={sizeMultiplier:{type:"f",value:3},opacity:{type:"f",value:.8},texture:{type:"t",value:TEXTURES.circle}},this.trafficAttributes={color:{type:"c",value:[]},size:{type:"f",value:[]}},this.trafficShaderMaterial=new THREE.ShaderMaterial({uniforms:this.trafficUniforms,attributes:this.trafficAttributes,vertexShader:null,fragmentShader:null,blending:currentBlendingMode,transparent:!0,depthTest:!1}),this.fireworks=[],this.initNeuralNetwork()}function updateHelpers(){axisHelper.visible=sceneSettings.enableAxisHelper,gridHelper.visible=sceneSettings.enableGridHelper}function main(){var a=window.mapNet=new MapNetwork;scene.add(a.meshComponents);var b=new THREE.PlaneGeometry(180,180,1),c=new THREE.MeshBasicMaterial({color:16777215,side:THREE.DoubleSide,map:TEXTURES.mark,combine:currentBlendingMode,transparent:!0,opacity:.1}),d=new THREE.Mesh(b,c);d.rotation.set(-Math.PI/2,0,0),d.position.set(0,-80,0),scene.add(d),run()}function update(){if(updateHelpers(),!sceneSettings.pause){var a=clock.getDelta();mapNet.update(a),cameraCtrl.update()}}function run(){requestAnimationFrame(run),renderer.clear(),update(),renderer.render(scene,camera),stats.update(),FRAME_COUNT++}function onWindowResize(){WIDTH=window.innerWidth,HEIGHT=window.innerHeight,pixelRatio=window.devicePixelRatio||1,screenRatio=WIDTH/HEIGHT,camera.aspect=screenRatio,camera.updateProjectionMatrix(),renderer.setSize(WIDTH,HEIGHT),renderer.setPixelRatio(pixelRatio)}MapPoint.prototype=Object.create(THREE.Vector3.prototype),MapPoint.prototype.connectPointTo=function(a){var b=this,c=new MapLine(b,a);return b.connection.push(c),a.connection.push(c),c},MapPoint.prototype.createSignal=function(){return[]},MapPoint.prototype.reset=function(){this.fired=!1},Traffic.prototype=Object.create(THREE.Vector3.prototype),Firework.prototype.reset=function(){this.parentObj.remove(this.points),this.dest=[],this.geometry=null,this.points=null,this.material.opacity=1,this.material.colorsNeedUpdate=!0},Firework.prototype.launch=function(){var a=new THREE.Vector3(this.position.x,this.position.y,this.position.z),b=new THREE.Vector3(this.position.x,this.position.y+this.fireHeight,this.position.z);this.attributes.color.value=[],this.attributes.size.value=[],this.attributes.color.value[0]=this.color,this.attributes.size.value[0]=3*this.size,this.geometry=new THREE.Geometry,this.points=new THREE.PointCloud(this.geometry,this.material),this.geometry.vertices.push(a),this.dest.push(b),this.parentObj.add(this.points)},Firework.prototype.explode=function(a){this.parentObj.remove(this.points),this.dest=[],this.geometry=new THREE.Geometry;for(var b=0;b<20;b++){var c=new THREE.Vector3(a.x,a.y,a.z),d=new THREE.Vector3(THREE.Math.randFloat(a.x-this.fireRadius,a.x+this.fireRadius),THREE.Math.randFloat(a.y-this.fireRadius,a.y+this.fireRadius),THREE.Math.randFloat(a.z-this.fireRadius,a.z+this.fireRadius));this.geometry.vertices.push(c),this.dest.push(d)}for(var b=0;b<this.geometry.vertices.length;b++)this.attributesChild.color.value[b]=this.color,this.attributesChild.size.value[b]=2*this.size;this.points=new THREE.PointCloud(this.geometry,this.materialChild),this.parentObj.add(this.points)},Firework.prototype.update=function(a){if(this.timer+=a,this.timer>this.duration&&(this.reset(),this.launch(),this.timer=0),this.points&&this.geometry){for(var b=this.geometry.vertices.length,c=0;c<b;c++)this.geometry.vertices[c].x+=(this.dest[c].x-this.geometry.vertices[c].x)/60,this.geometry.vertices[c].y+=(this.dest[c].y-this.geometry.vertices[c].y)/60,this.geometry.vertices[c].z+=(this.dest[c].z-this.geometry.vertices[c].z)/60,this.geometry.verticesNeedUpdate=!0;if(1===b&&Math.ceil(this.geometry.vertices[0].y)>this.dest[0].y-2)return void this.explode(this.geometry.vertices[0]);b>1&&(this.material.opacity-=.015,this.material.colorsNeedUpdate=!0)}},CommentLabel.prototype.setHTML=function(a){this.div.innerHTML=a},CommentLabel.prototype.setParent=function(a){this.parent=a},CommentLabel.prototype.updatePosition=function(){if(this.parent){var a=new THREE.Vector3(this.parent.position.x,this.parent.position.y,this.parent.position.z);this.position.copy(a)}var b=this.get2DCoords();this.div.style.left=b.x-this.div.offsetWidth/2+"px",this.div.style.top=b.y-this.div.offsetHeight-5+"px"},CommentLabel.prototype.get2DCoords=function(){var a=this.position.project(camera);return a.x=(a.x+1)/2*window.innerWidth,a.y=-(a.y-1)/2*window.innerHeight,a},MapLine.prototype=Object.create(THREE.CubicBezierCurve3.prototype),MapLine.prototype.getSubdividedVertices=function(){return this.getSpacedPoints(this.bezierSubdivision)},MapLine.prototype.getControlPoint=function(a,b){var c=(new THREE.Vector3).copy(b).sub(a).normalize(),d=new THREE.Vector3(0,0,1),e=(new THREE.Vector3).crossVectors(d,c).normalize(),f=c.angleTo(d),g=(new THREE.Matrix4).makeRotationAxis(e,f),h=Math.cos(THREE.Math.degToRad(45)),i=THREE.Math.randFloat(h,1),j=THREE.Math.randFloat(0,2*Math.PI),k=Math.sqrt(1-i*i),l=new THREE.Vector3(k*Math.cos(j),k*Math.sin(j),i);return l.multiplyScalar(this.cpLength),l.applyMatrix4(g),l.add(a),l},MapNetwork.prototype.initNeuralNetwork=function(){this.initMapPoints(OBJ_MODELS.usmap.geometry.vertices),this.initMapLines(),this.initTraffic(),this.initFirework(),this.mapPointShaderMaterial.vertexShader=SHADER_CONTAINER.mappointVert,this.mapPointShaderMaterial.fragmentShader=SHADER_CONTAINER.mappointFrag,this.mapLineShaderMaterial.vertexShader=SHADER_CONTAINER.maplineVert,this.mapLineShaderMaterial.fragmentShader=SHADER_CONTAINER.maplineFrag,this.trafficShaderMaterial.vertexShader=SHADER_CONTAINER.mappointVert,this.trafficShaderMaterial.fragmentShader=SHADER_CONTAINER.mappointFrag,this.initialized=!0},MapNetwork.prototype.initMapPoints=function(a){for(var b=0,c=0;c<a.length;c+=this.settings.verticesSkipStep){var d=a[c],e=new MapPoint(b++,d.x,d.y,d.z);this.components.mapPoints.push(e),this.mapPointGeom.vertices.push(e)}for(var c=0;c<this.components.mapPoints.length;c++)this.mapPointAttributes.color.value[c]=new THREE.Color("#ffffff"),this.mapPointAttributes.size.value[c]=THREE.Math.randFloat(.75,3);this.mapPointParticles=new THREE.PointCloud(this.mapPointGeom,this.mapPointShaderMaterial),this.meshComponents.add(this.mapPointParticles),this.mapPointShaderMaterial.needsUpdate=!0},MapNetwork.prototype.initMapLines=function(){for(var a=this.components.mapPoints.length,b=0;b<a;b++)for(var c=this.components.mapPoints[b],d=b+1;d<a;d++){var e=this.components.mapPoints[d];if(c!==e&&c.distanceTo(e)<this.settings.maxLineDist&&c.connection.length<this.settings.maxConnectinosPerPoint&&e.connection.length<this.settings.maxConnectinosPerPoint){var f=c.connectPointTo(e);this.constructMapLineArrayBuffer(f)}}renderer.getContext().getExtension("OES_element_index_uint")||console.error("32bit index buffer not supported!");var g=new Uint32Array(this.mapLineIndices),h=new Float32Array(this.mapLinePositions),i=new Float32Array(this.mapLineAttributes.opacity.value);this.mapLineGeom.addAttribute("index",new THREE.BufferAttribute(g,1)),this.mapLineGeom.addAttribute("position",new THREE.BufferAttribute(h,3)),this.mapLineGeom.addAttribute("opacity",new THREE.BufferAttribute(i,1)),this.mapLineGeom.computeBoundingSphere(),this.mapLineShaderMaterial=new THREE.ShaderMaterial({uniforms:this.mapLineUniforms,attributes:this.mapLineAttributes,vertexShader:null,fragmentShader:null,blending:currentBlendingMode,depthTest:!1,transparent:!0}),this.mapLineMesh=new THREE.Line(this.mapLineGeom,this.mapLineShaderMaterial,THREE.LinePieces),this.meshComponents.add(this.mapLineMesh)},MapNetwork.prototype.initTraffic=function(){this.trafficLabels=[],this.trafficLabelRoot=new THREE.Object3D,this.meshComponents.add(this.trafficLabelRoot);for(var a=0;a<TrafficData.length;a++){var b=TrafficData[a].position.x-131.5,c=TrafficData[a].height,d=TrafficData[a].position.y-70,e=new Traffic(b,c,d,TrafficData[a].size,TrafficData[a].color,TrafficData[a].label);this.components.traffics.push(e),this.trafficGeom.vertices.push(e);var f=new THREE.Object3D;f.position.set(b,c,d),this.trafficLabelRoot.add(f);var g=new CommentLabel(TrafficData[a].label,f);this.trafficLabels.push(g)}for(var a=0;a<this.components.traffics.length;a++)this.trafficAttributes.color.value[a]=new THREE.Color(TrafficData[a].color),this.trafficAttributes.size.value[a]=TrafficData[a].size;this.trafficParticles=new THREE.PointCloud(this.trafficGeom,this.trafficShaderMaterial),this.meshComponents.add(this.trafficParticles),this.trafficShaderMaterial.needsUpdate=!0},MapNetwork.prototype.initFirework=function(){this.fireworkRoot=new THREE.Object3D,this.meshComponents.add(this.fireworkRoot);for(var a=0;a<FireworkData.length;a++){var b=FireworkData[a].position.x-131.5,c=FireworkData[a].height,d=FireworkData[a].position.y-70,e=new THREE.Vector3(b,c,d),f=new Firework(this.fireworkRoot,e,FireworkData[a].size,FireworkData[a].color,FireworkData[a].duration,FireworkData[a].label);this.fireworks.push(f)}},MapNetwork.prototype.update=function(a){if(this.initialized){for(var b=0;b<this.trafficLabels.length;b++)this.trafficLabels[b].updatePosition();for(var c=0;c<this.fireworks.length;c++)this.fireworks[c].update(a)}},MapNetwork.prototype.constructMapLineArrayBuffer=function(a){this.components.mapLines.push(a);for(var b=a.vertices,c=0;c<b.length;c++){if(this.mapLinePositions.push(b[c].x,b[c].y,b[c].z),c<b.length-1){var d=this.mapLineNextPositionsIndex;this.mapLineIndices.push(d,d+1);var e=THREE.Math.randFloat(.005,.2);this.mapLineAttributes.opacity.value.push(e,e)}this.mapLineNextPositionsIndex+=1}},MapNetwork.prototype.releaseSignalAt=function(){};var loadingManager=new THREE.LoadingManager;loadingManager.onLoad=function(){document.getElementById("loading").style.display="none",console.log("Done."),main()},loadingManager.onProgress=function(a,b,c){};var shaderLoader=new THREE.XHRLoader(loadingManager);shaderLoader.setResponseType("text"),shaderLoader.loadMultiple=function(a,b){_.each(b,function(b,c){shaderLoader.load(b,function(b){a[c]=b})})};var SHADER_CONTAINER={};shaderLoader.loadMultiple(SHADER_CONTAINER,{mappointVert:"shaders/mappoint.vert",mappointFrag:"shaders/mappoint.frag",maplineVert:"shaders/mapline.vert",maplineFrag:"shaders/mapline.frag",fireworkVert:"shaders/firework.vert",fireworkFrag:"shaders/firework.frag"});var OBJ_MODELS={},OBJloader=new THREE.OBJLoader(loadingManager);OBJloader.load("models/map_vertex.obj",function(a){OBJ_MODELS.usmap=a.children[0]});var TEXTURES={},textureLoader=new THREE.TextureLoader(loadingManager);textureLoader.load("sprites/circle.png",function(a){TEXTURES.circle=a}),textureLoader.load("sprites/mark.png",function(a){TEXTURES.mark=a}),textureLoader.load("sprites/spark4.png",function(a){TEXTURES.spark4=a}),textureLoader.load("sprites/spark5.png",function(a){TEXTURES.spark5=a}),Detector.webgl||Detector.addGetWebGLMessage();var container,stats,scene,light,camera,cameraCtrl,renderer,WIDTH=window.innerWidth,HEIGHT=window.innerHeight,pixelRatio=window.devicePixelRatio||1,screenRatio=WIDTH/HEIGHT,clock=new THREE.Clock,FRAME_COUNT=0,sceneSettings={pause:!1,bgColor:1118481,enableGridHelper:!0,enableAxisHelper:!1};container=document.getElementById("canvas-container"),scene=new THREE.Scene,renderer=new THREE.WebGLRenderer({antialias:!0,alpha:!0}),renderer.setSize(WIDTH,HEIGHT),renderer.setPixelRatio(pixelRatio);var currentBlendingMode=THREE.NormalBlending;renderer.setClearColor(sceneSettings.bgColor,1),renderer.autoClear=!1,container.appendChild(renderer.domElement),stats=new Stats,camera=new THREE.PerspectiveCamera(75,screenRatio,.1,1e3),cameraCtrl=new THREE.OrbitControls(camera,renderer.domElement),cameraCtrl.object.position.y=120,cameraCtrl.autoRotate=!1,cameraCtrl.autoRotateSpeed=1,cameraCtrl.enablePan=!1,cameraCtrl.enableRotate=!1;var gridHelper=new THREE.GridHelper(131.5,5);gridHelper.setColors(48127,16777215),gridHelper.material.opacity=.05,gridHelper.material.transparent=!0,scene.add(gridHelper);var axisHelper=new THREE.AxisHelper(50);scene.add(axisHelper),window.addEventListener("keypress",function(a){switch(a.keyCode){case 32:sceneSettings.pause=!sceneSettings.pause;break;case 65:case 97:sceneSettings.enableGridHelper=!sceneSettings.enableGridHelper;break;case 83:case 115:sceneSettings.enableAxisHelper=!sceneSettings.enableAxisHelper}}),$(function(){var a;$(window).resize(function(){clearTimeout(a),a=setTimeout(function(){onWindowResize()},250)})});var TrafficData=[{size:1.5,position:{x:100,y:20},height:0,color:"#ffff00",label:"A city"},{size:1,position:{x:50,y:50},height:0,color:"#ff0000",label:"B city"},{size:1,position:{x:80,y:100},height:0,color:"#ff00ff",label:"C city"}],FireworkData=[{size:1,position:{x:100,y:20},height:0,duration:6,color:"#ff00ff",label:"A firework"},{size:1.5,position:{x:50,y:50},height:0,duration:5,color:"#ffff00",label:"B firework"},{size:2,position:{x:80,y:100},height:0,duration:4,color:"#00ffff",label:"C firework"}];