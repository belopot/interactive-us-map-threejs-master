function MapPoint(a,b,c,d){this.idx=a,this.connection=[],this.fired=!1,this.prevReleaseAxon=null,this.color="#ffffff",THREE.Vector3.call(this,b,c,d)}function MapLine(a,b){this.bezierSubdivision=8,this.pointA=a,this.pointB=b,this.cpLength=a.distanceTo(b)/THREE.Math.randFloat(1.5,4),this.controlPointA=this.getControlPoint(a,b),this.controlPointB=this.getControlPoint(b,a),THREE.CubicBezierCurve3.call(this,this.pointA,this.controlPointA,this.controlPointB,this.pointB),this.vertices=this.getSubdividedVertices()}function MapNetwork(){this.initialized=!1,this.settings={verticesSkipStep:2,maxLineDist:15,maxConnectinosPerPoint:10},this.meshComponents=new THREE.Object3D,this.components={mapPoints:[],mapLines:[]},this.mapLineOpacityMultiplier=.1,this.mapLineColor="#14d5ff",this.mapLineGeom=new THREE.BufferGeometry,this.mapLinePositions=[],this.mapLineIndices=[],this.mapLineNextPositionsIndex=0,this.mapLineUniforms={color:{type:"c",value:new THREE.Color(this.mapLineColor)},opacityMultiplier:{type:"f",value:this.mapLineOpacityMultiplier}},this.mapLineAttributes={opacity:{type:"f",value:[]}},this.mapPointSizeMultiplier=.4,this.spriteTextureMapPoint=TEXTURES.circle,this.mapPointColor="#ffffff",this.mapPointOpacity=.5,this.mapPointGeom=new THREE.Geometry,this.mapPointUniforms={sizeMultiplier:{type:"f",value:this.mapPointSizeMultiplier},opacity:{type:"f",value:this.mapPointOpacity},texture:{type:"t",value:this.spriteTextureMapPoint}},this.mapPointAttributes={color:{type:"c",value:[]},size:{type:"f",value:[]}},this.mapPointShaderMaterial=new THREE.ShaderMaterial({uniforms:this.mapPointUniforms,attributes:this.mapPointAttributes,vertexShader:null,fragmentShader:null,blending:currentBlendingMode,transparent:!0,depthTest:!1}),this.initNeuralNetwork()}function updateHelpers(){axisHelper.visible=sceneSettings.enableAxisHelper,gridHelper.visible=sceneSettings.enableGridHelper}function main(){var a=window.mapNet=new MapNetwork;scene.add(a.meshComponents);var b=new THREE.PlaneGeometry(180,180,1),c=new THREE.MeshBasicMaterial({color:16777215,side:THREE.DoubleSide,map:TEXTURES.mark,combine:currentBlendingMode,transparent:!0,opacity:.1}),d=new THREE.Mesh(b,c);d.rotation.set(-Math.PI/2,0,0),d.position.set(0,-80,0),scene.add(d),run()}function update(){if(updateHelpers(),!sceneSettings.pause){var a=clock.getDelta();mapNet.update(a),cameraCtrl.update()}}function run(){requestAnimationFrame(run),renderer.clear(),update(),renderer.render(scene,camera),stats.update(),FRAME_COUNT++}function onWindowResize(){WIDTH=window.innerWidth,HEIGHT=window.innerHeight,pixelRatio=window.devicePixelRatio||1,screenRatio=WIDTH/HEIGHT,camera.aspect=screenRatio,camera.updateProjectionMatrix(),renderer.setSize(WIDTH,HEIGHT),renderer.setPixelRatio(pixelRatio)}MapPoint.prototype=Object.create(THREE.Vector3.prototype),MapPoint.prototype.connectPointTo=function(a){var b=this,c=new MapLine(b,a);return b.connection.push(c),a.connection.push(c),c},MapPoint.prototype.createSignal=function(){return[]},MapPoint.prototype.reset=function(){this.fired=!1},MapLine.prototype=Object.create(THREE.CubicBezierCurve3.prototype),MapLine.prototype.getSubdividedVertices=function(){return this.getSpacedPoints(this.bezierSubdivision)},MapLine.prototype.getControlPoint=function(a,b){var c=(new THREE.Vector3).copy(b).sub(a).normalize(),d=new THREE.Vector3(0,0,1),e=(new THREE.Vector3).crossVectors(d,c).normalize(),f=c.angleTo(d),g=(new THREE.Matrix4).makeRotationAxis(e,f),h=Math.cos(THREE.Math.degToRad(45)),i=THREE.Math.randFloat(h,1),j=THREE.Math.randFloat(0,2*Math.PI),k=Math.sqrt(1-i*i),l=new THREE.Vector3(k*Math.cos(j),k*Math.sin(j),i);return l.multiplyScalar(this.cpLength),l.applyMatrix4(g),l.add(a),l},MapNetwork.prototype.initNeuralNetwork=function(){this.initMapPoints(OBJ_MODELS.usmap.geometry.vertices),this.initMapLines(),this.mapPointShaderMaterial.vertexShader=SHADER_CONTAINER.mappointVert,this.mapPointShaderMaterial.fragmentShader=SHADER_CONTAINER.mappointFrag,this.mapLineShaderMaterial.vertexShader=SHADER_CONTAINER.maplineVert,this.mapLineShaderMaterial.fragmentShader=SHADER_CONTAINER.maplineFrag,this.initialized=!0},MapNetwork.prototype.initMapPoints=function(a){for(var b=0,c=0;c<a.length;c+=this.settings.verticesSkipStep){var d=a[c],e=new MapPoint(b++,d.x,d.y,d.z);this.components.mapPoints.push(e),this.mapPointGeom.vertices.push(e)}for(var c=0;c<this.components.mapPoints.length;c++)this.mapPointAttributes.color.value[c]=new THREE.Color("#ffffff"),this.mapPointAttributes.size.value[c]=THREE.Math.randFloat(.75,3);this.mapPointParticles=new THREE.PointCloud(this.mapPointGeom,this.mapPointShaderMaterial),this.meshComponents.add(this.mapPointParticles),this.mapPointShaderMaterial.needsUpdate=!0},MapNetwork.prototype.initMapLines=function(){for(var a=this.components.mapPoints.length,b=0;b<a;b++)for(var c=this.components.mapPoints[b],d=b+1;d<a;d++){var e=this.components.mapPoints[d];if(c!==e&&c.distanceTo(e)<this.settings.maxLineDist&&c.connection.length<this.settings.maxConnectinosPerPoint&&e.connection.length<this.settings.maxConnectinosPerPoint){var f=c.connectPointTo(e);this.constructMapLineArrayBuffer(f)}}renderer.getContext().getExtension("OES_element_index_uint")||console.error("32bit index buffer not supported!");var g=new Uint32Array(this.mapLineIndices),h=new Float32Array(this.mapLinePositions),i=new Float32Array(this.mapLineAttributes.opacity.value);this.mapLineGeom.addAttribute("index",new THREE.BufferAttribute(g,1)),this.mapLineGeom.addAttribute("position",new THREE.BufferAttribute(h,3)),this.mapLineGeom.addAttribute("opacity",new THREE.BufferAttribute(i,1)),this.mapLineGeom.computeBoundingSphere(),this.mapLineShaderMaterial=new THREE.ShaderMaterial({uniforms:this.mapLineUniforms,attributes:this.mapLineAttributes,vertexShader:null,fragmentShader:null,blending:currentBlendingMode,depthTest:!1,transparent:!0}),this.mapLineMesh=new THREE.Line(this.mapLineGeom,this.mapLineShaderMaterial,THREE.LinePieces),this.meshComponents.add(this.mapLineMesh)},MapNetwork.prototype.update=function(a){this.initialized},MapNetwork.prototype.constructMapLineArrayBuffer=function(a){this.components.mapLines.push(a);for(var b=a.vertices,c=0;c<b.length;c++){if(this.mapLinePositions.push(b[c].x,b[c].y,b[c].z),c<b.length-1){var d=this.mapLineNextPositionsIndex;this.mapLineIndices.push(d,d+1);var e=THREE.Math.randFloat(.005,.2);this.mapLineAttributes.opacity.value.push(e,e)}this.mapLineNextPositionsIndex+=1}},MapNetwork.prototype.releaseSignalAt=function(){};var loadingManager=new THREE.LoadingManager;loadingManager.onLoad=function(){document.getElementById("loading").style.display="none",console.log("Done."),main()},loadingManager.onProgress=function(a,b,c){};var shaderLoader=new THREE.XHRLoader(loadingManager);shaderLoader.setResponseType("text"),shaderLoader.loadMultiple=function(a,b){_.each(b,function(b,c){shaderLoader.load(b,function(b){a[c]=b})})};var SHADER_CONTAINER={};shaderLoader.loadMultiple(SHADER_CONTAINER,{mappointVert:"shaders/mappoint.vert",mappointFrag:"shaders/mappoint.frag",maplineVert:"shaders/mapline.vert",maplineFrag:"shaders/mapline.frag"});var OBJ_MODELS={},OBJloader=new THREE.OBJLoader(loadingManager);OBJloader.load("models/map_vertex.obj",function(a){OBJ_MODELS.usmap=a.children[0]});var TEXTURES={},textureLoader=new THREE.TextureLoader(loadingManager);textureLoader.load("sprites/circle.png",function(a){TEXTURES.circle=a}),textureLoader.load("sprites/mark.png",function(a){TEXTURES.mark=a}),Detector.webgl||Detector.addGetWebGLMessage();var container,stats,scene,light,camera,cameraCtrl,renderer,WIDTH=window.innerWidth,HEIGHT=window.innerHeight,pixelRatio=window.devicePixelRatio||1,screenRatio=WIDTH/HEIGHT,clock=new THREE.Clock,FRAME_COUNT=0,sceneSettings={pause:!1,bgColor:131616,enableGridHelper:!1,enableAxisHelper:!1};container=document.getElementById("canvas-container"),scene=new THREE.Scene,renderer=new THREE.WebGLRenderer({antialias:!0,alpha:!0}),renderer.setSize(WIDTH,HEIGHT),renderer.setPixelRatio(pixelRatio);var currentBlendingMode=THREE.NormalBlending;renderer.setClearColor(sceneSettings.bgColor,1),renderer.autoClear=!1,container.appendChild(renderer.domElement),stats=new Stats,camera=new THREE.PerspectiveCamera(75,screenRatio,.1,1e3),cameraCtrl=new THREE.OrbitControls(camera,renderer.domElement),cameraCtrl.object.position.z=100,cameraCtrl.object.position.x=100,cameraCtrl.autoRotate=!1,cameraCtrl.autoRotateSpeed=1,cameraCtrl.enablePan=!1,cameraCtrl.enableRotate=!1;var gridHelper=new THREE.GridHelper(100,5);gridHelper.setColors(48127,16777215),gridHelper.material.opacity=.05,gridHelper.material.transparent=!0,scene.add(gridHelper);var axisHelper=new THREE.AxisHelper(50);scene.add(axisHelper),window.addEventListener("keypress",function(a){switch(a.keyCode){case 32:sceneSettings.pause=!sceneSettings.pause;break;case 65:case 97:sceneSettings.enableGridHelper=!sceneSettings.enableGridHelper;break;case 83:case 115:sceneSettings.enableAxisHelper=!sceneSettings.enableAxisHelper}}),$(function(){var a;$(window).resize(function(){clearTimeout(a),a=setTimeout(function(){onWindowResize()},250)})});var DATASET=[];